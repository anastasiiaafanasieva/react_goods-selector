{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","goodsFromServer","state","selectedGood","addItem","item","event","nonActiveItem","document","querySelector","clickedButton","target","buttons","querySelectorAll","buttonX","hidden","forEach","button","classList","add","setState","removeItem","activeElement","contains","remove","itemsArray","split","length","includes","i","replace","splice","join","clearSelect","initialText","textContent","element","prevState","this","stateLength","replaceAll","className","type","onClick","map","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c382f86a.chunk.js","sourcesContent":["/* eslint-disable no-console */\n// import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  goodsFromServer = [\n    'Dumplings',\n    'Carrot',\n    'Eggs',\n    'Ice cream',\n    'Apple',\n    'Bread',\n    'Fish',\n    'Honey',\n    'Jam',\n    'Garlic',\n  ];\n\n  state = {\n    selectedGood: '',\n  };\n\n  componentDidMount() {\n  }\n\n  componentDidUpdate(prevState: State) {\n    if (prevState.selectedGood !== this.state.selectedGood) {\n      const initialText = document.querySelector('.initial_text');\n      const stateLength = this.state.selectedGood.split(',').length;\n\n      if (initialText !== null) {\n        if (stateLength === 1 && this.state.selectedGood !== '') {\n          initialText.textContent = `${this.state.selectedGood.replaceAll('_', ' ')} is selected`;\n        } else if (this.state.selectedGood === '') {\n          initialText.textContent = 'No goods selected';\n        } else {\n          initialText.textContent = `${this.state.selectedGood.replaceAll('_', ' ')} are selected`;\n        }\n      }\n    }\n  }\n\n  addItem = (item: string, event: React.MouseEvent) => {\n    const nonActiveItem = document.querySelector(`.${item}`);\n    const clickedButton = event.target;\n    const buttons = document.querySelectorAll('.button');\n    const buttonX: HTMLElement | null = document.querySelector('.buttonX');\n\n    if (buttonX !== null) {\n      buttonX.hidden = false;\n    }\n\n    buttons.forEach(button => {\n      if (button === clickedButton) {\n        button.classList.add('hidden');\n      }\n    });\n\n    nonActiveItem?.classList.add('active');\n\n    if (this.state.selectedGood === '') {\n      this.setState({ selectedGood: item });\n    } else {\n      this.setState((state) => ({\n        selectedGood: `${state.selectedGood}, ${item}`,\n      }));\n    }\n  };\n\n  removeItem = (item: string) => {\n    const activeElement = document.querySelector(`.${item}`);\n    const buttons = document.querySelectorAll('.button');\n    const buttonX: HTMLElement | null = document.querySelector('.buttonX');\n\n    buttons.forEach(button => {\n      if (button.classList.contains(item)) {\n        button.classList.remove('hidden');\n      }\n    });\n\n    activeElement?.classList.remove('active');\n\n    this.setState((state) => {\n      const itemsArray = state.selectedGood.split(',');\n\n      if (itemsArray.length === 1 && state.selectedGood.includes(item)) {\n        if (buttonX !== null) {\n          buttonX.hidden = true;\n        }\n\n        return { selectedGood: '' };\n      }\n\n      for (let i = 0; i < itemsArray.length; i += 1) {\n        if (itemsArray[i].replace(' ', '') === item) {\n          itemsArray.splice(i, 1);\n        }\n      }\n\n      return { selectedGood: itemsArray.join(',') };\n    });\n  };\n\n  clearSelect = () => {\n    const initialText = document.querySelector('.initial_text');\n    const activeElement = document.querySelectorAll('.active');\n    const buttons = document.querySelectorAll('.button');\n    const buttonX: HTMLElement | null = document.querySelector('.buttonX');\n\n    if (buttonX !== null) {\n      buttonX.hidden = true;\n    }\n\n    if (initialText !== null) {\n      initialText.textContent = '';\n    }\n\n    activeElement.forEach(element => element.classList.remove('active'));\n\n    buttons.forEach(button => button.classList.remove('hidden'));\n\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <h1 className=\"header\">\n            <div className=\"initial_text\">No goods selected</div>\n            <div className=\"buttonX\" hidden>\n              <button\n                type=\"button\"\n                onClick={this.clearSelect}\n              >\n                X\n              </button>\n            </div>\n          </h1>\n        </div>\n        <div className=\"listOfGoods\">\n          <ul>\n            {this.goodsFromServer.map((item) => (\n              <li\n                key={item}\n                className=\"listOfGoods item\"\n              >\n                <div className={`listOfGoods ${item.replaceAll(' ', '_')}`}>{item}</div>\n\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`listOfGoods button ${item.replaceAll(' ', '_')}`}\n                    onClick={(event) => {\n                      this.addItem(item.replaceAll(' ', '_'), event);\n                    }}\n                  >\n                    Add\n                  </button>\n                </div>\n\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`listOfGoods button ${item.replaceAll(' ', '_')}`}\n                    onClick={() => {\n                      this.removeItem(item.replaceAll(' ', '_'));\n                    }}\n                  >\n                    Remove\n                  </button>\n                </div>\n\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}