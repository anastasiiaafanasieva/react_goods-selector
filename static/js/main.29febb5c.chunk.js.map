{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addInitialText","length","slice","join","isSelectedItem","item","find","good","addItem","setState","removeItem","filter","clearSelect","this","className","type","classNames","hidden","onClick","map","active","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,IAFnB,EAKEC,eAAiB,WACf,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUF,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcG,MAAM,GAAI,GAAGC,KAAK,MAA1C,yBACMJ,EAAcA,EAAcE,OAAS,GAD3C,mBAdR,EAmBEG,eAAiB,SAACC,GAChB,OAAO,EAAKP,MAAMC,cAAcO,MAAK,SAAAC,GAAI,OAAIA,IAASF,MApB1D,EAuBEG,QAAU,SAACH,GACT,EAAKI,UAAS,SAACX,GACb,MAAO,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BM,SAzBvD,EA6BEK,WAAa,SAACL,GACZ,EAAKI,UAAS,SAACX,GACb,MAAO,CAAEC,cAAeD,EAAMC,cAAcY,QAAO,SAAAJ,GAAI,OAAIA,IAASF,UA/B1E,EAmCEO,YAAc,WACZ,EAAKH,SAAS,CAAEV,cAAe,MApCnC,4CAuCE,WAAU,IAAD,OACCA,EAAkBc,KAAKf,MAAvBC,cAER,OACE,gCACE,qBAAKe,UAAU,MAAf,SACE,+BACE,qBAAKA,UAAU,eAAf,SAA+BD,KAAKb,mBACpC,8BACE,wBACEe,KAAK,SACLD,UAAWE,IACT,UACA,CAAEC,OAAiC,IAAzBlB,EAAcE,SAE1BiB,QAASL,KAAKD,YANhB,sBAaN,qBAAKE,UAAU,cAAf,SACE,6BACGlB,EAAgBuB,KAAI,SAACd,GAAD,OACnB,qBAEES,UAAU,mBAFZ,UAIE,qBAAKA,UAAWE,IACd,cACA,CAAEI,OAAQ,EAAKhB,eAAeC,KAFhC,SAKGA,IAGH,8BACE,wBACEU,KAAK,SACLD,UAAWE,IACT,qBACA,CAAEC,OAAQ,EAAKb,eAAeC,KAEhCa,QAAS,WACP,EAAKV,QAAQH,IAPjB,mBAcF,8BACE,wBACEU,KAAK,SACLD,UAAWE,IACT,qBACA,CAAEC,QAAS,EAAKb,eAAeC,KAEjCa,QAAS,WACP,EAAKR,WAAWL,IAPpB,wBA3BGA,iBAjErB,GAAyBgB,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.29febb5c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: [],\n  };\n\n  addInitialText = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')}\n        and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n  };\n\n  isSelectedItem = (item: string) => {\n    return this.state.selectedGoods.find(good => good === item);\n  };\n\n  addItem = (item: string) => {\n    this.setState((state) => {\n      return { selectedGoods: [...state.selectedGoods, item] };\n    });\n  };\n\n  removeItem = (item: string) => {\n    this.setState((state) => {\n      return { selectedGoods: state.selectedGoods.filter(good => good !== item) };\n    });\n  };\n\n  clearSelect = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div>\n        <div className=\"App\">\n          <h1>\n            <div className=\"initial_text\">{this.addInitialText()}</div>\n            <div>\n              <button\n                type=\"button\"\n                className={classNames(\n                  'buttonX',\n                  { hidden: selectedGoods.length === 0 },\n                )}\n                onClick={this.clearSelect}\n              >\n                X\n              </button>\n            </div>\n          </h1>\n        </div>\n        <div className=\"listOfGoods\">\n          <ul>\n            {goodsFromServer.map((item) => (\n              <li\n                key={item}\n                className=\"listOfGoods item\"\n              >\n                <div className={classNames(\n                  'listOfGoods',\n                  { active: this.isSelectedItem(item) },\n                )}\n                >\n                  {item}\n                </div>\n\n                <div>\n                  <button\n                    type=\"button\"\n                    className={classNames(\n                      'listOfGoods button',\n                      { hidden: this.isSelectedItem(item) },\n                    )}\n                    onClick={() => {\n                      this.addItem(item);\n                    }}\n                  >\n                    Add\n                  </button>\n                </div>\n\n                <div>\n                  <button\n                    type=\"button\"\n                    className={classNames(\n                      'listOfGoods button',\n                      { hidden: !this.isSelectedItem(item) },\n                    )}\n                    onClick={() => {\n                      this.removeItem(item);\n                    }}\n                  >\n                    Remove\n                  </button>\n                </div>\n\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}